// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.2
// source: voice.proto

package voice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WordEvalRequest_AuFormat int32

const (
	WordEvalRequest_pcm   WordEvalRequest_AuFormat = 0
	WordEvalRequest_aac   WordEvalRequest_AuFormat = 1
	WordEvalRequest_speex WordEvalRequest_AuFormat = 2
)

// Enum value maps for WordEvalRequest_AuFormat.
var (
	WordEvalRequest_AuFormat_name = map[int32]string{
		0: "pcm",
		1: "aac",
		2: "speex",
	}
	WordEvalRequest_AuFormat_value = map[string]int32{
		"pcm":   0,
		"aac":   1,
		"speex": 2,
	}
)

func (x WordEvalRequest_AuFormat) Enum() *WordEvalRequest_AuFormat {
	p := new(WordEvalRequest_AuFormat)
	*p = x
	return p
}

func (x WordEvalRequest_AuFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WordEvalRequest_AuFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_voice_proto_enumTypes[0].Descriptor()
}

func (WordEvalRequest_AuFormat) Type() protoreflect.EnumType {
	return &file_voice_proto_enumTypes[0]
}

func (x WordEvalRequest_AuFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WordEvalRequest_AuFormat.Descriptor instead.
func (WordEvalRequest_AuFormat) EnumDescriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0, 0}
}

type ProcessRequest_AuFormat int32

const (
	ProcessRequest_pcm   ProcessRequest_AuFormat = 0
	ProcessRequest_aac   ProcessRequest_AuFormat = 1
	ProcessRequest_speex ProcessRequest_AuFormat = 2
)

// Enum value maps for ProcessRequest_AuFormat.
var (
	ProcessRequest_AuFormat_name = map[int32]string{
		0: "pcm",
		1: "aac",
		2: "speex",
	}
	ProcessRequest_AuFormat_value = map[string]int32{
		"pcm":   0,
		"aac":   1,
		"speex": 2,
	}
)

func (x ProcessRequest_AuFormat) Enum() *ProcessRequest_AuFormat {
	p := new(ProcessRequest_AuFormat)
	*p = x
	return p
}

func (x ProcessRequest_AuFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessRequest_AuFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_voice_proto_enumTypes[1].Descriptor()
}

func (ProcessRequest_AuFormat) Type() protoreflect.EnumType {
	return &file_voice_proto_enumTypes[1]
}

func (x ProcessRequest_AuFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessRequest_AuFormat.Descriptor instead.
func (ProcessRequest_AuFormat) EnumDescriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{10, 0}
}

type WordEvalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                   // 会话UUID =1是分配标量
	UserId    string                     `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                            // 用户ID
	Word      *WordEvalRequest_WordRefer `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`                                                              // 标准单词
	AuData    []byte                     `protobuf:"bytes,4,opt,name=au_data,json=auData,proto3" json:"au_data,omitempty"`                                            // 语音数据
	AuRate    int32                      `protobuf:"varint,5,opt,name=au_rate,json=auRate,proto3" json:"au_rate,omitempty"`                                           // 语音采样率，目前只支持16k
	AuFormat  WordEvalRequest_AuFormat   `protobuf:"varint,6,opt,name=au_format,json=auFormat,proto3,enum=voice.WordEvalRequest_AuFormat" json:"au_format,omitempty"` // 语音编码格式，目前只支持pcm
}

func (x *WordEvalRequest) Reset() {
	*x = WordEvalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalRequest) ProtoMessage() {}

func (x *WordEvalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalRequest.ProtoReflect.Descriptor instead.
func (*WordEvalRequest) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0}
}

func (x *WordEvalRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *WordEvalRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WordEvalRequest) GetWord() *WordEvalRequest_WordRefer {
	if x != nil {
		return x.Word
	}
	return nil
}

func (x *WordEvalRequest) GetAuData() []byte {
	if x != nil {
		return x.AuData
	}
	return nil
}

func (x *WordEvalRequest) GetAuRate() int32 {
	if x != nil {
		return x.AuRate
	}
	return 0
}

func (x *WordEvalRequest) GetAuFormat() WordEvalRequest_AuFormat {
	if x != nil {
		return x.AuFormat
	}
	return WordEvalRequest_pcm
}

type WordEvalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string                     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`     // 会话UUID
	StatusCode   int32                      `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // 返回码
	StatusMesg   string                     `protobuf:"bytes,3,opt,name=status_mesg,json=statusMesg,proto3" json:"status_mesg,omitempty"`  // 返回信息
	Word         *WordEvalResponse_WordInfo `protobuf:"bytes,4,opt,name=word,proto3" json:"word,omitempty"`
	AudioUrl     string                     `protobuf:"bytes,5,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`             // 语音音频文件下载地址，单词结束时给出
	ModelVersion string                     `protobuf:"bytes,6,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // 模型版本信息
}

func (x *WordEvalResponse) Reset() {
	*x = WordEvalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalResponse) ProtoMessage() {}

func (x *WordEvalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalResponse.ProtoReflect.Descriptor instead.
func (*WordEvalResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1}
}

func (x *WordEvalResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *WordEvalResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *WordEvalResponse) GetStatusMesg() string {
	if x != nil {
		return x.StatusMesg
	}
	return ""
}

func (x *WordEvalResponse) GetWord() *WordEvalResponse_WordInfo {
	if x != nil {
		return x.Word
	}
	return nil
}

func (x *WordEvalResponse) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *WordEvalResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

type WordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordContent string             `protobuf:"bytes,1,opt,name=word_content,json=wordContent,proto3" json:"word_content,omitempty"` // 单词文本
	WordType    string             `protobuf:"bytes,2,opt,name=word_type,json=wordType,proto3" json:"word_type,omitempty"`          // 单词类型
	WordPron    *WordInfo_PronInfo `protobuf:"bytes,3,opt,name=word_pron,json=wordPron,proto3" json:"word_pron,omitempty"`          // 单词标准发音
}

func (x *WordInfo) Reset() {
	*x = WordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordInfo) ProtoMessage() {}

func (x *WordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordInfo.ProtoReflect.Descriptor instead.
func (*WordInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{2}
}

func (x *WordInfo) GetWordContent() string {
	if x != nil {
		return x.WordContent
	}
	return ""
}

func (x *WordInfo) GetWordType() string {
	if x != nil {
		return x.WordType
	}
	return ""
}

func (x *WordInfo) GetWordPron() *WordInfo_PronInfo {
	if x != nil {
		return x.WordPron
	}
	return nil
}

type SentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SentId      string      `protobuf:"bytes,1,opt,name=sent_id,json=sentId,proto3" json:"sent_id,omitempty"`                // 句子ID
	SentContent string      `protobuf:"bytes,2,opt,name=sent_content,json=sentContent,proto3" json:"sent_content,omitempty"` // 句子文本
	Words       []*WordInfo `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`                                // 标准单词
}

func (x *SentInfo) Reset() {
	*x = SentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentInfo) ProtoMessage() {}

func (x *SentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentInfo.ProtoReflect.Descriptor instead.
func (*SentInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{3}
}

func (x *SentInfo) GetSentId() string {
	if x != nil {
		return x.SentId
	}
	return ""
}

func (x *SentInfo) GetSentContent() string {
	if x != nil {
		return x.SentContent
	}
	return ""
}

func (x *SentInfo) GetWords() []*WordInfo {
	if x != nil {
		return x.Words
	}
	return nil
}

type InitPronRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话UUID
	UserId    string      `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	Sents     []*SentInfo `protobuf:"bytes,3,rep,name=sents,proto3" json:"sents,omitempty"`                          // 评测句子列表
	RefLang   int32       `protobuf:"varint,4,opt,name=ref_lang,json=refLang,proto3" json:"ref_lang,omitempty"`      // 评测语言，0: 英文
	EvaMode   int32       `protobuf:"varint,5,opt,name=eva_mode,json=evaMode,proto3" json:"eva_mode,omitempty"`      // 评测模式，0: 朗读模式，1：冷启动模式
}

func (x *InitPronRequest) Reset() {
	*x = InitPronRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPronRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPronRequest) ProtoMessage() {}

func (x *InitPronRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPronRequest.ProtoReflect.Descriptor instead.
func (*InitPronRequest) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{4}
}

func (x *InitPronRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InitPronRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InitPronRequest) GetSents() []*SentInfo {
	if x != nil {
		return x.Sents
	}
	return nil
}

func (x *InitPronRequest) GetRefLang() int32 {
	if x != nil {
		return x.RefLang
	}
	return 0
}

func (x *InitPronRequest) GetEvaMode() int32 {
	if x != nil {
		return x.EvaMode
	}
	return 0
}

type InitPronResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`          // 会话UUID
	StatusCode   int32  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`      // 初始化返回码, 0: 成功；100：跳过；199：其他错误
	StatusMesg   string `protobuf:"bytes,3,opt,name=status_mesg,json=statusMesg,proto3" json:"status_mesg,omitempty"`       // 初始化状态，OK：成功；SKIP：跳过；ERROR：其他错误
	ModelVersion string `protobuf:"bytes,4,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // 模型版本信息
}

func (x *InitPronResponse) Reset() {
	*x = InitPronResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitPronResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitPronResponse) ProtoMessage() {}

func (x *InitPronResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitPronResponse.ProtoReflect.Descriptor instead.
func (*InitPronResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{5}
}

func (x *InitPronResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InitPronResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *InitPronResponse) GetStatusMesg() string {
	if x != nil {
		return x.StatusMesg
	}
	return ""
}

func (x *InitPronResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话UUID
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{6}
}

func (x *CloseRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`     // 会话UUID
	StatusCode int32  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"` // 关闭返回码，0：成功；199：其他错误
	StatusMesg string `protobuf:"bytes,3,opt,name=status_mesg,json=statusMesg,proto3" json:"status_mesg,omitempty"`  // 关闭状态，OK：成功；ERROR：错误
	AudioUrl   string `protobuf:"bytes,4,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`        // 语音音频文件下载地址，单词结束时给出
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{7}
}

func (x *CloseResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *CloseResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CloseResponse) GetStatusMesg() string {
	if x != nil {
		return x.StatusMesg
	}
	return ""
}

func (x *CloseResponse) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话UUID
	UserId    string                  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户ID
	Sents     []*InitRequest_SentInfo `protobuf:"bytes,3,rep,name=sents,proto3" json:"sents,omitempty"`                          // 评测句子列表
	RefLang   int32                   `protobuf:"varint,4,opt,name=ref_lang,json=refLang,proto3" json:"ref_lang,omitempty"`      // 评测语言，0: 英文
	EvaMode   int32                   `protobuf:"varint,5,opt,name=eva_mode,json=evaMode,proto3" json:"eva_mode,omitempty"`      // 评测模式，0: 朗读模式
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{8}
}

func (x *InitRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InitRequest) GetSents() []*InitRequest_SentInfo {
	if x != nil {
		return x.Sents
	}
	return nil
}

func (x *InitRequest) GetRefLang() int32 {
	if x != nil {
		return x.RefLang
	}
	return 0
}

func (x *InitRequest) GetEvaMode() int32 {
	if x != nil {
		return x.EvaMode
	}
	return 0
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId    string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`          // 会话UUID
	StatusCode   int32  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`      // 初始化返回码，0：成功；100：跳过；199：其他错误
	StatusMesg   string `protobuf:"bytes,3,opt,name=status_mesg,json=statusMesg,proto3" json:"status_mesg,omitempty"`       // 初始化状态，OK：成功；SKIP：跳过；ERROR：未知错误
	ModelVersion string `protobuf:"bytes,4,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"` // 模型版本信息
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{9}
}

func (x *InitResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *InitResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *InitResponse) GetStatusMesg() string {
	if x != nil {
		return x.StatusMesg
	}
	return ""
}

func (x *InitResponse) GetModelVersion() string {
	if x != nil {
		return x.ModelVersion
	}
	return ""
}

type ProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                  // 会话UUID
	AuData    []byte                  `protobuf:"bytes,2,opt,name=au_data,json=auData,proto3" json:"au_data,omitempty"`                                           // 当前数据包数据
	AuRate    int32                   `protobuf:"varint,3,opt,name=au_rate,json=auRate,proto3" json:"au_rate,omitempty"`                                          // 语音采样率，目前只支持16k
	AuFormat  ProcessRequest_AuFormat `protobuf:"varint,4,opt,name=au_format,json=auFormat,proto3,enum=voice.ProcessRequest_AuFormat" json:"au_format,omitempty"` // 语音编码格式，目前只支持pcm
	IsLast    int32                   `protobuf:"varint,5,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`                                          // 是否最后一个, 0不是，1是, vad使用
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{10}
}

func (x *ProcessRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ProcessRequest) GetAuData() []byte {
	if x != nil {
		return x.AuData
	}
	return nil
}

func (x *ProcessRequest) GetAuRate() int32 {
	if x != nil {
		return x.AuRate
	}
	return 0
}

func (x *ProcessRequest) GetAuFormat() ProcessRequest_AuFormat {
	if x != nil {
		return x.AuFormat
	}
	return ProcessRequest_pcm
}

func (x *ProcessRequest) GetIsLast() int32 {
	if x != nil {
		return x.IsLast
	}
	return 0
}

type ProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string                      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                 // 会话UUID
	StatusCode     int32                       `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`             // 评估结果状态码，0：人声；1：静音；2：噪声；3：空包；
	StatusMesg     string                      `protobuf:"bytes,3,opt,name=status_mesg,json=statusMesg,proto3" json:"status_mesg,omitempty"`              // 评估结果信息
	TotalScore     int32                       `protobuf:"varint,4,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`             // 发音总评分，取值范围[0, 100]
	TotalAccuracy  int32                       `protobuf:"varint,5,opt,name=total_accuracy,json=totalAccuracy,proto3" json:"total_accuracy,omitempty"`    // 发音准确度，取值范围[0, 100]
	TotalIntegrity int32                       `protobuf:"varint,6,opt,name=total_integrity,json=totalIntegrity,proto3" json:"total_integrity,omitempty"` // 发音完整度，取值范围[0, 100]
	TotalFluency   int32                       `protobuf:"varint,7,opt,name=total_fluency,json=totalFluency,proto3" json:"total_fluency,omitempty"`       // 发音流利度，取值范围[0, 100]
	AudioUrl       string                      `protobuf:"bytes,8,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`                    // 语音音频文件下载地址，句子结束时给出
	Sents          []*ProcessResponse_SentInfo `protobuf:"bytes,9,rep,name=sents,proto3" json:"sents,omitempty"`                                          // 多句子候选
	DetectEos      bool                        `protobuf:"varint,10,opt,name=detect_eos,json=detectEos,proto3" json:"detect_eos,omitempty"`               // 检测句子是否结束
}

func (x *ProcessResponse) Reset() {
	*x = ProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse) ProtoMessage() {}

func (x *ProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse.ProtoReflect.Descriptor instead.
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{11}
}

func (x *ProcessResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ProcessResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ProcessResponse) GetStatusMesg() string {
	if x != nil {
		return x.StatusMesg
	}
	return ""
}

func (x *ProcessResponse) GetTotalScore() int32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *ProcessResponse) GetTotalAccuracy() int32 {
	if x != nil {
		return x.TotalAccuracy
	}
	return 0
}

func (x *ProcessResponse) GetTotalIntegrity() int32 {
	if x != nil {
		return x.TotalIntegrity
	}
	return 0
}

func (x *ProcessResponse) GetTotalFluency() int32 {
	if x != nil {
		return x.TotalFluency
	}
	return 0
}

func (x *ProcessResponse) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *ProcessResponse) GetSents() []*ProcessResponse_SentInfo {
	if x != nil {
		return x.Sents
	}
	return nil
}

func (x *ProcessResponse) GetDetectEos() bool {
	if x != nil {
		return x.DetectEos
	}
	return false
}

type WordEvalRequest_WordRefer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string                               `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`                      // 单词文本
	PronRefer *WordEvalRequest_WordRefer_PronRefer `protobuf:"bytes,2,opt,name=pron_refer,json=pronRefer,proto3" json:"pron_refer,omitempty"` // 标准发音
}

func (x *WordEvalRequest_WordRefer) Reset() {
	*x = WordEvalRequest_WordRefer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalRequest_WordRefer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalRequest_WordRefer) ProtoMessage() {}

func (x *WordEvalRequest_WordRefer) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalRequest_WordRefer.ProtoReflect.Descriptor instead.
func (*WordEvalRequest_WordRefer) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WordEvalRequest_WordRefer) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WordEvalRequest_WordRefer) GetPronRefer() *WordEvalRequest_WordRefer_PronRefer {
	if x != nil {
		return x.PronRefer
	}
	return nil
}

type WordEvalRequest_WordRefer_PronRefer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phones    []*WordEvalRequest_WordRefer_PronRefer_PhoneStr `protobuf:"bytes,1,rep,name=phones,proto3" json:"phones,omitempty"`       // 标准音素
	Syllables []string                                        `protobuf:"bytes,2,rep,name=syllables,proto3" json:"syllables,omitempty"` // 标准音节
	P2S       []int32                                         `protobuf:"varint,3,rep,packed,name=p2s,proto3" json:"p2s,omitempty"`     // 音素转音节对照表
}

func (x *WordEvalRequest_WordRefer_PronRefer) Reset() {
	*x = WordEvalRequest_WordRefer_PronRefer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalRequest_WordRefer_PronRefer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalRequest_WordRefer_PronRefer) ProtoMessage() {}

func (x *WordEvalRequest_WordRefer_PronRefer) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalRequest_WordRefer_PronRefer.ProtoReflect.Descriptor instead.
func (*WordEvalRequest_WordRefer_PronRefer) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *WordEvalRequest_WordRefer_PronRefer) GetPhones() []*WordEvalRequest_WordRefer_PronRefer_PhoneStr {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *WordEvalRequest_WordRefer_PronRefer) GetSyllables() []string {
	if x != nil {
		return x.Syllables
	}
	return nil
}

func (x *WordEvalRequest_WordRefer_PronRefer) GetP2S() []int32 {
	if x != nil {
		return x.P2S
	}
	return nil
}

type WordEvalRequest_WordRefer_PronRefer_PhoneStr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ps []string `protobuf:"bytes,1,rep,name=ps,proto3" json:"ps,omitempty"` // 音素标示
}

func (x *WordEvalRequest_WordRefer_PronRefer_PhoneStr) Reset() {
	*x = WordEvalRequest_WordRefer_PronRefer_PhoneStr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalRequest_WordRefer_PronRefer_PhoneStr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalRequest_WordRefer_PronRefer_PhoneStr) ProtoMessage() {}

func (x *WordEvalRequest_WordRefer_PronRefer_PhoneStr) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalRequest_WordRefer_PronRefer_PhoneStr.ProtoReflect.Descriptor instead.
func (*WordEvalRequest_WordRefer_PronRefer_PhoneStr) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *WordEvalRequest_WordRefer_PronRefer_PhoneStr) GetPs() []string {
	if x != nil {
		return x.Ps
	}
	return nil
}

type WordEvalResponse_WordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match         int32                                  `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`                                      // 单词评估情况，0：正常；1：增读；2：漏读；3：错读；4：回读
	Word          string                                 `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`                                         // 当前单词
	BeginTime     int32                                  `protobuf:"varint,3,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`             // 当前单词语音起始时间点，单位为ms
	EndTime       int32                                  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   // 当前单词语音终止时间点，单位为ms
	PronScore     int32                                  `protobuf:"varint,5,opt,name=pron_score,json=pronScore,proto3" json:"pron_score,omitempty"`             // 单词发音评分
	PronAccuracy  int32                                  `protobuf:"varint,6,opt,name=pron_accuracy,json=pronAccuracy,proto3" json:"pron_accuracy,omitempty"`    // 单词发音准确度，取值范围[0, 100]
	PronIntegrity int32                                  `protobuf:"varint,7,opt,name=pron_integrity,json=pronIntegrity,proto3" json:"pron_integrity,omitempty"` // 单词发音完整度，取值范围[0, 100]
	PronFluency   int32                                  `protobuf:"varint,8,opt,name=pron_fluency,json=pronFluency,proto3" json:"pron_fluency,omitempty"`       // 单词发音流利度，取值范围[0, 100]
	Phones        []*WordEvalResponse_WordInfo_PhoneInfo `protobuf:"bytes,9,rep,name=phones,proto3" json:"phones,omitempty"`                                     // 音素评估结果
	Syllables     []*WordEvalResponse_WordInfo_SyllInfo  `protobuf:"bytes,10,rep,name=syllables,proto3" json:"syllables,omitempty"`                              // 音节评估结果
}

func (x *WordEvalResponse_WordInfo) Reset() {
	*x = WordEvalResponse_WordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalResponse_WordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalResponse_WordInfo) ProtoMessage() {}

func (x *WordEvalResponse_WordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalResponse_WordInfo.ProtoReflect.Descriptor instead.
func (*WordEvalResponse_WordInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1, 0}
}

func (x *WordEvalResponse_WordInfo) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordEvalResponse_WordInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetPronScore() int32 {
	if x != nil {
		return x.PronScore
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetPronAccuracy() int32 {
	if x != nil {
		return x.PronAccuracy
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetPronIntegrity() int32 {
	if x != nil {
		return x.PronIntegrity
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetPronFluency() int32 {
	if x != nil {
		return x.PronFluency
	}
	return 0
}

func (x *WordEvalResponse_WordInfo) GetPhones() []*WordEvalResponse_WordInfo_PhoneInfo {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *WordEvalResponse_WordInfo) GetSyllables() []*WordEvalResponse_WordInfo_SyllInfo {
	if x != nil {
		return x.Syllables
	}
	return nil
}

type WordEvalResponse_WordInfo_PhoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match     int32  `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`                          // 音素评估情况，0：正常；1：增读；2：漏读；3：错读；4：回读
	Phone     string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`                           // 当前音素
	RefPhone  string `protobuf:"bytes,3,opt,name=ref_phone,json=refPhone,proto3" json:"ref_phone,omitempty"`     // 参考音素
	BeginTime int32  `protobuf:"varint,4,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"` // 当前音素起始时间点，单位为ms
	EndTime   int32  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 当前音素中止时间点，单位为ms
	Stress    bool   `protobuf:"varint,6,opt,name=stress,proto3" json:"stress,omitempty"`                        // 是否重音
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) Reset() {
	*x = WordEvalResponse_WordInfo_PhoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalResponse_WordInfo_PhoneInfo) ProtoMessage() {}

func (x *WordEvalResponse_WordInfo_PhoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalResponse_WordInfo_PhoneInfo.ProtoReflect.Descriptor instead.
func (*WordEvalResponse_WordInfo_PhoneInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) GetRefPhone() string {
	if x != nil {
		return x.RefPhone
	}
	return ""
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *WordEvalResponse_WordInfo_PhoneInfo) GetStress() bool {
	if x != nil {
		return x.Stress
	}
	return false
}

type WordEvalResponse_WordInfo_SyllInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match     int32  `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`                          // 音节评估情况，0：正常；1：增读；2：漏读；3：错读；4：回读
	Syllable  string `protobuf:"bytes,2,opt,name=syllable,proto3" json:"syllable,omitempty"`                     // 当前音节
	BeginTime int32  `protobuf:"varint,3,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"` // 当前音节起始时间，单位为ms
	EndTime   int32  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 当前音节中止时间，单位为ms
}

func (x *WordEvalResponse_WordInfo_SyllInfo) Reset() {
	*x = WordEvalResponse_WordInfo_SyllInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordEvalResponse_WordInfo_SyllInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordEvalResponse_WordInfo_SyllInfo) ProtoMessage() {}

func (x *WordEvalResponse_WordInfo_SyllInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordEvalResponse_WordInfo_SyllInfo.ProtoReflect.Descriptor instead.
func (*WordEvalResponse_WordInfo_SyllInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *WordEvalResponse_WordInfo_SyllInfo) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *WordEvalResponse_WordInfo_SyllInfo) GetSyllable() string {
	if x != nil {
		return x.Syllable
	}
	return ""
}

func (x *WordEvalResponse_WordInfo_SyllInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *WordEvalResponse_WordInfo_SyllInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type WordInfo_PronInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phones    []*WordInfo_PronInfo_PhoneStr `protobuf:"bytes,1,rep,name=phones,proto3" json:"phones,omitempty"`       // 标准音素
	Syllables []string                      `protobuf:"bytes,2,rep,name=syllables,proto3" json:"syllables,omitempty"` // 标准音节
	P2S       []int32                       `protobuf:"varint,3,rep,packed,name=p2s,proto3" json:"p2s,omitempty"`     // 音素转音节对照表
}

func (x *WordInfo_PronInfo) Reset() {
	*x = WordInfo_PronInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordInfo_PronInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordInfo_PronInfo) ProtoMessage() {}

func (x *WordInfo_PronInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordInfo_PronInfo.ProtoReflect.Descriptor instead.
func (*WordInfo_PronInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{2, 0}
}

func (x *WordInfo_PronInfo) GetPhones() []*WordInfo_PronInfo_PhoneStr {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *WordInfo_PronInfo) GetSyllables() []string {
	if x != nil {
		return x.Syllables
	}
	return nil
}

func (x *WordInfo_PronInfo) GetP2S() []int32 {
	if x != nil {
		return x.P2S
	}
	return nil
}

type WordInfo_PronInfo_PhoneStr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ps []string `protobuf:"bytes,1,rep,name=ps,proto3" json:"ps,omitempty"` // 音素标示
}

func (x *WordInfo_PronInfo_PhoneStr) Reset() {
	*x = WordInfo_PronInfo_PhoneStr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordInfo_PronInfo_PhoneStr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordInfo_PronInfo_PhoneStr) ProtoMessage() {}

func (x *WordInfo_PronInfo_PhoneStr) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordInfo_PronInfo_PhoneStr.ProtoReflect.Descriptor instead.
func (*WordInfo_PronInfo_PhoneStr) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *WordInfo_PronInfo_PhoneStr) GetPs() []string {
	if x != nil {
		return x.Ps
	}
	return nil
}

type InitRequest_SentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SentId      string `protobuf:"bytes,1,opt,name=sent_id,json=sentId,proto3" json:"sent_id,omitempty"`                // 句子ID
	SentContent string `protobuf:"bytes,2,opt,name=sent_content,json=sentContent,proto3" json:"sent_content,omitempty"` // 句子文本
}

func (x *InitRequest_SentInfo) Reset() {
	*x = InitRequest_SentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest_SentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest_SentInfo) ProtoMessage() {}

func (x *InitRequest_SentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest_SentInfo.ProtoReflect.Descriptor instead.
func (*InitRequest_SentInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{8, 0}
}

func (x *InitRequest_SentInfo) GetSentId() string {
	if x != nil {
		return x.SentId
	}
	return ""
}

func (x *InitRequest_SentInfo) GetSentContent() string {
	if x != nil {
		return x.SentContent
	}
	return ""
}

type ProcessResponse_SentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SentId        string                               `protobuf:"bytes,1,opt,name=sent_id,json=sentId,proto3" json:"sent_id,omitempty"`                       // 句子ID
	Words         []*ProcessResponse_SentInfo_WordInfo `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`                                       // 单词评估结果
	PronScore     int32                                `protobuf:"varint,3,opt,name=pron_score,json=pronScore,proto3" json:"pron_score,omitempty"`             // 句子发音评分
	PronAccuracy  int32                                `protobuf:"varint,4,opt,name=pron_accuracy,json=pronAccuracy,proto3" json:"pron_accuracy,omitempty"`    // 句子发音准确度，取值范围[0, 100]
	PronIntegrity int32                                `protobuf:"varint,5,opt,name=pron_integrity,json=pronIntegrity,proto3" json:"pron_integrity,omitempty"` // 句子发音完整度，取值范围[0, 100]
	PronFluency   int32                                `protobuf:"varint,6,opt,name=pron_fluency,json=pronFluency,proto3" json:"pron_fluency,omitempty"`       // 句子发音流利度，取值范围[0, 100]
	BeginTime     int32                                `protobuf:"varint,7,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`             // 句子语音起始时间点，单位为ms
	EndTime       int32                                `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   // 句子语音终止时间点，单位为ms
}

func (x *ProcessResponse_SentInfo) Reset() {
	*x = ProcessResponse_SentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse_SentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse_SentInfo) ProtoMessage() {}

func (x *ProcessResponse_SentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse_SentInfo.ProtoReflect.Descriptor instead.
func (*ProcessResponse_SentInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ProcessResponse_SentInfo) GetSentId() string {
	if x != nil {
		return x.SentId
	}
	return ""
}

func (x *ProcessResponse_SentInfo) GetWords() []*ProcessResponse_SentInfo_WordInfo {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *ProcessResponse_SentInfo) GetPronScore() int32 {
	if x != nil {
		return x.PronScore
	}
	return 0
}

func (x *ProcessResponse_SentInfo) GetPronAccuracy() int32 {
	if x != nil {
		return x.PronAccuracy
	}
	return 0
}

func (x *ProcessResponse_SentInfo) GetPronIntegrity() int32 {
	if x != nil {
		return x.PronIntegrity
	}
	return 0
}

func (x *ProcessResponse_SentInfo) GetPronFluency() int32 {
	if x != nil {
		return x.PronFluency
	}
	return 0
}

func (x *ProcessResponse_SentInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProcessResponse_SentInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ProcessResponse_SentInfo_WordInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match         int32                                          `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`                                      // 单词评估情况，0：正常；1：增读；2：漏读；3：错读；4：回读
	Word          string                                         `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`                                         // 当前单词
	BeginTime     int32                                          `protobuf:"varint,3,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`             // 当前单词语音起始时间点，单位为ms
	EndTime       int32                                          `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   // 当前单词语音终止时间点，单位为ms
	PronScore     int32                                          `protobuf:"varint,5,opt,name=pron_score,json=pronScore,proto3" json:"pron_score,omitempty"`             // 单词发音评分
	PronAccuracy  int32                                          `protobuf:"varint,6,opt,name=pron_accuracy,json=pronAccuracy,proto3" json:"pron_accuracy,omitempty"`    // 单词发音准确度，取值范围[0, 100]
	PronIntegrity int32                                          `protobuf:"varint,7,opt,name=pron_integrity,json=pronIntegrity,proto3" json:"pron_integrity,omitempty"` // 单词发音完整度，取值范围[0, 100]
	PronFluency   int32                                          `protobuf:"varint,8,opt,name=pron_fluency,json=pronFluency,proto3" json:"pron_fluency,omitempty"`       // 单词发音流利度，取值范围[0, 100]
	Phones        []*ProcessResponse_SentInfo_WordInfo_PhoneInfo `protobuf:"bytes,9,rep,name=phones,proto3" json:"phones,omitempty"`                                     // 音素评估结果
	Syllables     []*ProcessResponse_SentInfo_WordInfo_SyllInfo  `protobuf:"bytes,10,rep,name=syllables,proto3" json:"syllables,omitempty"`                              // 音节评估结果
}

func (x *ProcessResponse_SentInfo_WordInfo) Reset() {
	*x = ProcessResponse_SentInfo_WordInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse_SentInfo_WordInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse_SentInfo_WordInfo) ProtoMessage() {}

func (x *ProcessResponse_SentInfo_WordInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse_SentInfo_WordInfo.ProtoReflect.Descriptor instead.
func (*ProcessResponse_SentInfo_WordInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *ProcessResponse_SentInfo_WordInfo) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *ProcessResponse_SentInfo_WordInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetPronScore() int32 {
	if x != nil {
		return x.PronScore
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetPronAccuracy() int32 {
	if x != nil {
		return x.PronAccuracy
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetPronIntegrity() int32 {
	if x != nil {
		return x.PronIntegrity
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetPronFluency() int32 {
	if x != nil {
		return x.PronFluency
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo) GetPhones() []*ProcessResponse_SentInfo_WordInfo_PhoneInfo {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *ProcessResponse_SentInfo_WordInfo) GetSyllables() []*ProcessResponse_SentInfo_WordInfo_SyllInfo {
	if x != nil {
		return x.Syllables
	}
	return nil
}

type ProcessResponse_SentInfo_WordInfo_PhoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match     int32  `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`                          // 音素评估情况，0：正常；1：增读；2：漏读；3：错读；4：回读
	Phone     string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`                           // 当前音素
	RefPhone  string `protobuf:"bytes,3,opt,name=ref_phone,json=refPhone,proto3" json:"ref_phone,omitempty"`     // 参考音素
	BeginTime int32  `protobuf:"varint,4,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"` // 当前音素起始时间点，单位为ms
	EndTime   int32  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 当前音素中止时间点，单位为ms
	Stress    bool   `protobuf:"varint,6,opt,name=stress,proto3" json:"stress,omitempty"`                        // 是否重音
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) Reset() {
	*x = ProcessResponse_SentInfo_WordInfo_PhoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse_SentInfo_WordInfo_PhoneInfo) ProtoMessage() {}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse_SentInfo_WordInfo_PhoneInfo.ProtoReflect.Descriptor instead.
func (*ProcessResponse_SentInfo_WordInfo_PhoneInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{11, 0, 0, 0}
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) GetRefPhone() string {
	if x != nil {
		return x.RefPhone
	}
	return ""
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo_PhoneInfo) GetStress() bool {
	if x != nil {
		return x.Stress
	}
	return false
}

type ProcessResponse_SentInfo_WordInfo_SyllInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match     int32  `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`                          // 音节评估情况，0：正常；1：增读；2：漏读；3：错读；4：回读
	Syllable  string `protobuf:"bytes,2,opt,name=syllable,proto3" json:"syllable,omitempty"`                     // 当前音节
	BeginTime int32  `protobuf:"varint,3,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"` // 当前音节起始时间，单位为ms
	EndTime   int32  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 当前音节中止时间，单位为ms
}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) Reset() {
	*x = ProcessResponse_SentInfo_WordInfo_SyllInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessResponse_SentInfo_WordInfo_SyllInfo) ProtoMessage() {}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) ProtoReflect() protoreflect.Message {
	mi := &file_voice_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessResponse_SentInfo_WordInfo_SyllInfo.ProtoReflect.Descriptor instead.
func (*ProcessResponse_SentInfo_WordInfo_SyllInfo) Descriptor() ([]byte, []int) {
	return file_voice_proto_rawDescGZIP(), []int{11, 0, 0, 1}
}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) GetMatch() int32 {
	if x != nil {
		return x.Match
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) GetSyllable() string {
	if x != nil {
		return x.Syllable
	}
	return ""
}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProcessResponse_SentInfo_WordInfo_SyllInfo) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

var File_voice_proto protoreflect.FileDescriptor

var file_voice_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x22, 0xb2, 0x04, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x75, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x75, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x75, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x61, 0x75, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x08, 0x61, 0x75,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0x97, 0x02, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x49,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45,
	0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x1a, 0xa4, 0x01, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x52, 0x06, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x32, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x70, 0x32, 0x73, 0x1a, 0x1a, 0x0a, 0x08, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x70, 0x73,
	0x22, 0x27, 0x0a, 0x08, 0x41, 0x75, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03,
	0x70, 0x63, 0x6d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x61, 0x63, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x78, 0x10, 0x02, 0x22, 0x98, 0x07, 0x0a, 0x10, 0x57, 0x6f,
	0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x67, 0x12,
	0x34, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xaa, 0x05, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6e,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6e, 0x5f,
	0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x66, 0x6c, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6e, 0x46,
	0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x73, 0x79,
	0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x53, 0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x1a, 0xa6, 0x01, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x76, 0x0a, 0x08,
	0x53, 0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x35, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x6e, 0x1a, 0x91, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x32, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x70, 0x32, 0x73,
	0x1a, 0x1a, 0x0a, 0x08, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x70, 0x73, 0x22, 0x6d, 0x0a, 0x08,
	0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x0f,
	0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x66, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x61,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x61,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x2d, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8d,
	0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0xf6,
	0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66,
	0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x66,
	0x4c, 0x61, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x1a,
	0x46, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xe0,
	0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x61, 0x75, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x75, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x61, 0x75, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x75, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x08, 0x61, 0x75, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x08, 0x41, 0x75, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x63, 0x6d, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x61, 0x61, 0x63, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x78, 0x10,
	0x02, 0x22, 0xe6, 0x0a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x6d, 0x65, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x65, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x65, 0x6f, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x45, 0x6f, 0x73, 0x1a,
	0xe8, 0x07, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63,
	0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x6e, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6e, 0x46, 0x6c, 0x75, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xba, 0x05,
	0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x72, 0x61, 0x63, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x75, 0x72, 0x61,
	0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6e, 0x5f, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6e, 0x46, 0x6c, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4a, 0x0a, 0x06,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x09, 0x73, 0x79, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x57, 0x6f, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a, 0xa6, 0x01, 0x0a, 0x09, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x73, 0x73, 0x1a, 0x76, 0x0a, 0x08, 0x53, 0x79, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xb5, 0x02, 0x0a, 0x0c, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x12, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x32, 0x0a,
	0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x13, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61,
	0x6c, 0x12, 0x16, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x3b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voice_proto_rawDescOnce sync.Once
	file_voice_proto_rawDescData = file_voice_proto_rawDesc
)

func file_voice_proto_rawDescGZIP() []byte {
	file_voice_proto_rawDescOnce.Do(func() {
		file_voice_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_proto_rawDescData)
	})
	return file_voice_proto_rawDescData
}

var file_voice_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_voice_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_voice_proto_goTypes = []interface{}{
	(WordEvalRequest_AuFormat)(0),                        // 0: voice.WordEvalRequest.AuFormat
	(ProcessRequest_AuFormat)(0),                         // 1: voice.ProcessRequest.AuFormat
	(*WordEvalRequest)(nil),                              // 2: voice.WordEvalRequest
	(*WordEvalResponse)(nil),                             // 3: voice.WordEvalResponse
	(*WordInfo)(nil),                                     // 4: voice.WordInfo
	(*SentInfo)(nil),                                     // 5: voice.SentInfo
	(*InitPronRequest)(nil),                              // 6: voice.InitPronRequest
	(*InitPronResponse)(nil),                             // 7: voice.InitPronResponse
	(*CloseRequest)(nil),                                 // 8: voice.CloseRequest
	(*CloseResponse)(nil),                                // 9: voice.CloseResponse
	(*InitRequest)(nil),                                  // 10: voice.InitRequest
	(*InitResponse)(nil),                                 // 11: voice.InitResponse
	(*ProcessRequest)(nil),                               // 12: voice.ProcessRequest
	(*ProcessResponse)(nil),                              // 13: voice.ProcessResponse
	(*WordEvalRequest_WordRefer)(nil),                    // 14: voice.WordEvalRequest.WordRefer
	(*WordEvalRequest_WordRefer_PronRefer)(nil),          // 15: voice.WordEvalRequest.WordRefer.PronRefer
	(*WordEvalRequest_WordRefer_PronRefer_PhoneStr)(nil), // 16: voice.WordEvalRequest.WordRefer.PronRefer.PhoneStr
	(*WordEvalResponse_WordInfo)(nil),                    // 17: voice.WordEvalResponse.WordInfo
	(*WordEvalResponse_WordInfo_PhoneInfo)(nil),          // 18: voice.WordEvalResponse.WordInfo.PhoneInfo
	(*WordEvalResponse_WordInfo_SyllInfo)(nil),           // 19: voice.WordEvalResponse.WordInfo.SyllInfo
	(*WordInfo_PronInfo)(nil),                            // 20: voice.WordInfo.PronInfo
	(*WordInfo_PronInfo_PhoneStr)(nil),                   // 21: voice.WordInfo.PronInfo.PhoneStr
	(*InitRequest_SentInfo)(nil),                         // 22: voice.InitRequest.SentInfo
	(*ProcessResponse_SentInfo)(nil),                     // 23: voice.ProcessResponse.SentInfo
	(*ProcessResponse_SentInfo_WordInfo)(nil),            // 24: voice.ProcessResponse.SentInfo.WordInfo
	(*ProcessResponse_SentInfo_WordInfo_PhoneInfo)(nil),  // 25: voice.ProcessResponse.SentInfo.WordInfo.PhoneInfo
	(*ProcessResponse_SentInfo_WordInfo_SyllInfo)(nil),   // 26: voice.ProcessResponse.SentInfo.WordInfo.SyllInfo
}
var file_voice_proto_depIdxs = []int32{
	14, // 0: voice.WordEvalRequest.word:type_name -> voice.WordEvalRequest.WordRefer
	0,  // 1: voice.WordEvalRequest.au_format:type_name -> voice.WordEvalRequest.AuFormat
	17, // 2: voice.WordEvalResponse.word:type_name -> voice.WordEvalResponse.WordInfo
	20, // 3: voice.WordInfo.word_pron:type_name -> voice.WordInfo.PronInfo
	4,  // 4: voice.SentInfo.words:type_name -> voice.WordInfo
	5,  // 5: voice.InitPronRequest.sents:type_name -> voice.SentInfo
	22, // 6: voice.InitRequest.sents:type_name -> voice.InitRequest.SentInfo
	1,  // 7: voice.ProcessRequest.au_format:type_name -> voice.ProcessRequest.AuFormat
	23, // 8: voice.ProcessResponse.sents:type_name -> voice.ProcessResponse.SentInfo
	15, // 9: voice.WordEvalRequest.WordRefer.pron_refer:type_name -> voice.WordEvalRequest.WordRefer.PronRefer
	16, // 10: voice.WordEvalRequest.WordRefer.PronRefer.phones:type_name -> voice.WordEvalRequest.WordRefer.PronRefer.PhoneStr
	18, // 11: voice.WordEvalResponse.WordInfo.phones:type_name -> voice.WordEvalResponse.WordInfo.PhoneInfo
	19, // 12: voice.WordEvalResponse.WordInfo.syllables:type_name -> voice.WordEvalResponse.WordInfo.SyllInfo
	21, // 13: voice.WordInfo.PronInfo.phones:type_name -> voice.WordInfo.PronInfo.PhoneStr
	24, // 14: voice.ProcessResponse.SentInfo.words:type_name -> voice.ProcessResponse.SentInfo.WordInfo
	25, // 15: voice.ProcessResponse.SentInfo.WordInfo.phones:type_name -> voice.ProcessResponse.SentInfo.WordInfo.PhoneInfo
	26, // 16: voice.ProcessResponse.SentInfo.WordInfo.syllables:type_name -> voice.ProcessResponse.SentInfo.WordInfo.SyllInfo
	10, // 17: voice.VoiceService.Initial:input_type -> voice.InitRequest
	12, // 18: voice.VoiceService.Process:input_type -> voice.ProcessRequest
	8,  // 19: voice.VoiceService.Close:input_type -> voice.CloseRequest
	6,  // 20: voice.VoiceService.InitialWithPron:input_type -> voice.InitPronRequest
	2,  // 21: voice.VoiceService.WordEval:input_type -> voice.WordEvalRequest
	11, // 22: voice.VoiceService.Initial:output_type -> voice.InitResponse
	13, // 23: voice.VoiceService.Process:output_type -> voice.ProcessResponse
	9,  // 24: voice.VoiceService.Close:output_type -> voice.CloseResponse
	7,  // 25: voice.VoiceService.InitialWithPron:output_type -> voice.InitPronResponse
	3,  // 26: voice.VoiceService.WordEval:output_type -> voice.WordEvalResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_voice_proto_init() }
func file_voice_proto_init() {
	if File_voice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_voice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitPronRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitPronResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalRequest_WordRefer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalRequest_WordRefer_PronRefer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalRequest_WordRefer_PronRefer_PhoneStr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalResponse_WordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalResponse_WordInfo_PhoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordEvalResponse_WordInfo_SyllInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordInfo_PronInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordInfo_PronInfo_PhoneStr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest_SentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessResponse_SentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessResponse_SentInfo_WordInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessResponse_SentInfo_WordInfo_PhoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessResponse_SentInfo_WordInfo_SyllInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_voice_proto_goTypes,
		DependencyIndexes: file_voice_proto_depIdxs,
		EnumInfos:         file_voice_proto_enumTypes,
		MessageInfos:      file_voice_proto_msgTypes,
	}.Build()
	File_voice_proto = out.File
	file_voice_proto_rawDesc = nil
	file_voice_proto_goTypes = nil
	file_voice_proto_depIdxs = nil
}
